@import './utils/utils.scss';



* {
  box-sizing: border-box;
}

body{
  min-height: 100vh;
  width: 100%;
  margin: 0;
  padding: 0;
  font: {
    family: $body-font-family;
    size: $body-font-size;
  }
  color: $body-color;
}

.App-container{
  width: 100%;
  height: 100vh;
  background-color: $bg-primary;
  background-image: $bg-primary-gradient;
  display: grid;
  grid-template-areas: 
  "a"
  "b";
  grid-template-rows: 60px 1fr;


  &-login{
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 15px;
  border-radius: 4px;
  }


}

.wrapper {
  place-items: center;
  // display: flex;
  // align-items: center;
  // justify-content: center;
  background: rgb(150,0,150);
  background: linear-gradient(225deg, rgba(150,0,150,1) 0%, rgba(107,36,205,1) 50%, rgba(0,104,255,1) 100%);
}

.container {
  padding: 15px;
  border-radius: 4px;
  background-color: white;
}


// Util
// You can create a different file to store all utilities classes
.flex-space-between {
  display: flex;
  justify-content: space-between;
}

.flex-align-center {
  display: flex;
  justify-content: center;
  gap: 5px;
}

button {
    cursor: pointer;
    background-color: $primary-color;
    color: white;
    border: none;
    font-weight: bold;
    text-transform: uppercase;
    border-radius: 6px;
    letter-spacing: 1px;
    width: 100%;
    height: $button-height;
    transition: 300ms background-color ease-in-out;
    &:hover {
        background-color: lighten($primary-color, 10%);
    }
}

.input-group {
    margin-bottom: 20px;
    position: relative;
    &__label {
        display: block;
        position: absolute;
        top: 0;
        // to keep the position center
        line-height: $input-height;
        color: #aaa;
        left: 5px;
        padding: 0 5px;
        transition: line-height 200ms ease-in-out,
            font-size 200ms ease-in-out, 
            top 200ms ease-in-out;
        // firefox fix
        pointer-events: none;
    }
    &__input {
        width: 100%;
        height: $input-height;
        border: 1px solid $border-color;
        border-radius: 3px;
        padding: 0 10px;
        // there must a required prop in input
        // &:valid,
        // need to add placeholder
        &:not(:placeholder-shown),
        &:focus {
            + label {
              color: black;
                line-height: 10px;
                opacity: 1;
                font-size: 10px;
                top: -5px;
            }
        }
        &:focus {
            outline: none;
            border: 1px solid $primary-color;
            + label {
                color: $primary-color;
            }
        }
    }
}

.tabs {
    $parent: &;
    display: flex;
    flex-flow: row wrap;
    &__text {
        flex: 1;
        margin: 0;
        cursor: pointer;
        padding: 20px 30px;
        font-size: 1.2em;
        opacity: 0.5;
        background-color: #eeeeee;
        border-top: 3px solid #eeeeee;
        transition: border-top 300ms ease-out;
        transform-origin: top;
        text-transform: uppercase;
        font-weight: bold;
        text-align: center;
    }
    &__content {
        display: none;
        flex: 1 1 100%;
        order: 99;
        padding: 40px 30px 30px 30px;
    }
    &__button {
        visibility: hidden;
        height: 0;
        margin: 0;
        position: absolute;
        &:checked {
            + #{$parent}__text {
                // order: -1;
                color: $primary-color;
                opacity: 1;
                background-color: white;
                border-top: 3px solid $primary-color;
            }
            + #{$parent}__text + #{$parent}__content {
                display: block;
            }
        }
    }
}

.form{
  &-container{
    background-color: white;
    padding: 20px;
  }
}